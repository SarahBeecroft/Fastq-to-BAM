#!/bin/bash

#########################################################
# 
# Platform: NCI Gadi HPC
# Description: run bam metrics over parallel tasks
# Usage: first, run 'bash bam_metrics_make_input.sh <cohort_name>', 
# then execute this script with 'qsub bam_metrics_run_parallel.pbs'
# Details:
#	Calculate the following metrics for final BAMs:
#	alignment_summary_metrics
#	insert_size_metrics
#	quality_distribution_metrics
#	quality_by_cycle_metrics
#	base_distribution_by_cycle_metrics
#	For 30X, allow 128 GB RAM and 1 CPU per sample (equivalent 
#	charge rate to 4 hugemem CPUs per sample)
#	For higher coverage, increase the RAM per sample (and be sure 
#	to adjust 'NCPUS=' below) OR the walltime
#
# Author: Cali Willet
# cali.willet@sydney.edu.au
# Date last modified: 12/08/2020
#
# If you use this script towards a publication, please acknowledge the
# Sydney Informatics Hub (or co-authorship, where appropriate).
#
# Suggested acknowledgement:
# The authors acknowledge the scientific and technical assistance 
# <or e.g. bioinformatics assistance of <PERSON>> of Sydney Informatics
# Hub and resources and services from the National Computational 
# Infrastructure (NCI), which is supported by the Australian Government
# with access facilitated by the University of Sydney.
# 
#########################################################	

#PBS -P <project>
#PBS -N metrics
#PBS -l walltime=03:00:00
#PBS -l ncpus=10
#PBS -l mem=1280GB
#PBS -q hugemem
#PBS -W umask=022
#PBS -l wd
#PBS -o ./Logs/bam_metrics.o 
#PBS -e ./Logs/bam_metrics.e 
#PBS -lstorage=scratch/<project>

set -e

mkdir -p Final_bams_metrics Bam_metrics_logs
	
SCRIPT=./bam_metrics.sh
INPUTS=./Inputs/bam_metrics.input

NCPUS=4 # requires 4 CPU worth of mem per sample on hugemem nodes  

#########################################################
# Do not edit below this line (unless running on a node that 
# does not have 48 CPU, in which case edit the value of 'CPN'
#########################################################

CPN=48 #CPUs per node 
M=$(( CPN / NCPUS )) #tasks per node

sed "s|^|${SCRIPT} |" ${INPUTS} > ${PBS_JOBFS}/input-file

mpirun --np $((M * PBS_NCPUS / CPN)) \
        --map-by node:PE=${NCPUS} \
        nci-parallel \
        --verbose \
        --input-file ${PBS_JOBFS}/input-file
