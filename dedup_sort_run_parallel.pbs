#!/bin/bash

#########################################################
# 
# Platform: NCI Gadi HPC
# Description: sort with SAMtools, perform duplicate read 
# marking with SAMblaster and also output 'split' and 'disc'
# read  files for downstream SV use eg with 'Lumpy'. Parallel tasks
# by sample.
# Usage: first, run 'bash dedup_sort_make_input.sh <cohort_name>', 
# then execute this script with 'qsub dedup_sort_run_parallel.pbs'
# Details:
# 	Sort by genomic coordiante with with samtools and perform
# 	on-the-fly duplicate marking and create split and disc files 
#	with samblaster. This task is optimally suited to Broadwell 
#	nodes, which are not online for Gadi yet. Much benchmarking 
#	of one TN pair found the best config on Gadi normal nodes 
#	is 48 CPU (for the RAM), 24 CPU for samtools sort, 4 GB RAM 
#	per sort thread, 12 CPU view. Process normal and normal as 
#	separate jobs due to ~ double walltime requirement for normal.
#	Do not use the new feature of samtools 1.10 that can create BAI
#	indexes on the fly during sort, as there was a bug in the initial
#	release so until Gadi global samtools app is updated, run index
#	as a subsequent job. Do not run it as a standalone command in 
#	this job, as the SU cost will be much higher than necessarry
#	for that step. 
#
# Author: Cali Willet
# cali.willet@sydney.edu.au
# Date last modified: 24/07/2020
#
# If you use this script towards a publication, please acknowledge the
# Sydney Informatics Hub (or co-authorship, where appropriate).
#
# Suggested acknowledgement:
# The authors acknowledge the scientific and technical assistance 
# <or e.g. bioinformatics assistance of <PERSON>> of Sydney Informatics
# Hub and resources and services from the National Computational 
# Infrastructure (NCI), which is supported by the Australian Government
# with access facilitated by the University of Sydney.
# 
#########################################################  

#PBS -P <project>
#PBS -N ds-normal
#PBS -l ncpus=768
#PBS -l mem=3040gb
#PBS -l walltime=03:00:00
#PBS -q normal
#PBS -W umask=022 
#PBS -l wd 
#PBS -o ./Logs/dedup_sort-normal.o 
#PBS -e ./Logs/dedup_sort-normal.e 
#PBS -lstorage=scratch/<project>

set -e

module load openmpi/4.0.2
module load nci-parallel/1.0.0

SCRIPT=./dedup_sort.sh 
INPUTS=./Inputs/dedup_sort.inputs-normal  

NCPUS=48 #Private node per sample, needs all the RAM, but give samtools fewer threads

mkdir -p ./Dedup_sort ./SplitDisc ./Error_capture/Dedup_sort ./Logs/Dedup_sort


#########################################################
# Do not edit below this line (unless running on a node that 
# does not have 48 CPU, in which case edit the value of 'CPN'
#########################################################

CPN=48 #CPUs per node 
M=$(( CPN / NCPUS )) #tasks per node

sed "s|^|${SCRIPT} |" ${INPUTS} > ${PBS_JOBFS}/input-file

mpirun --np $((M * PBS_NCPUS / 48)) \
        --map-by node:PE=${NCPUS} \
        nci-parallel \
        --verbose \
        --input-file ${PBS_JOBFS}/input-file
